{
	"info": {
		"_postman_id": "46d57b50-0915-423d-826c-5991fd06483d",
		"name": "AuthService",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41183242"
	},
	"item": [
		{
			"name": "auth/v1",
			"item": [
				{
					"name": "auth-management",
					"item": [
						{
							"name": "process",
							"item": [
								{
									"name": "Initiate authentication process",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Set the value of authTransactionId to environment variable\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.environment.set(\"authTransactionId\", jsonData.authTransactionId);",
													"});",
													"pm.test(\"Set the value of customerId to environment variable\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.environment.set(\"customerId\", jsonData.customerId);",
													"});",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Validate the schema for the response\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.authTransactionId).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.customerDeviceId).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.customerId).to.exist.and.to.be.a('string');",
													"    pm.expect(responseData.isNewCustomer).to.exist.and.to.be.a('boolean');",
													"});",
													"",
													"// Generate a 10-digit number, ensuring the first digit is one of [2, 6, 7, 8, 9]",
													"let firstDigit = [2, 6, 7, 8, 9][Math.floor(Math.random() * 5)]; // Choose from the set [2, 6, 7, 8, 9]",
													"let randomNumber = firstDigit * 1000000000 + Math.floor(Math.random() * 1000000000);",
													"console.log(randomNumber);",
													"",
													"// Optionally, you can set this number as a variable in Postman",
													"pm.environment.set(\"randomNumber\", randomNumber);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-client-id",
												"value": "7248a069-71f5-4e36-a1a3-95db6be24656",
												"type": "text"
											},
											{
												"key": "x-session-id",
												"value": "sessionId",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "correlationId",
												"type": "text",
												"disabled": true
											},
											{
												"key": "x-customer-id",
												"value": "customerId",
												"type": "text",
												"disabled": true
											},
											{
												"key": "x-customer-ip",
												"value": "customerIp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceInfo\": {\n    \"deviceOs\": \"ANDROID\",\n    \"deviceBrand\": \"Samsung\",\n    \"deviceModel\": \"s23\",\n    \"deviceOsVersion\": \"12.0\",\n    \"vId\":\"\"\n  },\n  \"authMedium\": \"PHONE_SMS_OTP\",\n  \"authSource\": \"BELONGAPP\",\n  \"phone\": {\n    \"countryCode\": \"+91\",\n    \"phoneNumber\": \"{{randomNumber}}\"\n  },\n  \"meta\": {},\n  \"appInfo\": {\n    \"appSdkVersion\": \"string\"\n  },\n  \"userAgent\": \"string\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/v1/auth-management/process/initiate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"v1",
												"auth-management",
												"process",
												"initiate"
											]
										}
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceInfo\": {\n    \"deviceOs\": \"<string>\",\n    \"deviceBrand\": \"<string>\",\n    \"deviceModel\": \"<string>\",\n    \"deviceOsVersion\": \"<string>\"\n  },\n  \"authMedium\": \"<string>\",\n  \"authSource\": \"<string>\",\n  \"phone\": {\n    \"countryCode\": \"<string>\",\n    \"phoneNumber\": \"<string>\"\n  },\n  \"appInfo\": {\n    \"appSdkVersion\": \"<string>\"\n  },\n  \"userAgent\": \"<string>\",\n  \"meta\": \"<object>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/v1/auth-management/process/initiate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"v1",
														"auth-management",
														"process",
														"initiate"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authTransactionId\": \"<string>\",\n  \"customerDeviceId\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"isNewCustomer\": \"<boolean>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceInfo\": {\n    \"deviceOs\": \"<string>\",\n    \"deviceBrand\": \"<string>\",\n    \"deviceModel\": \"<string>\",\n    \"deviceOsVersion\": \"<string>\"\n  },\n  \"authMedium\": \"<string>\",\n  \"authSource\": \"<string>\",\n  \"phone\": {\n    \"countryCode\": \"<string>\",\n    \"phoneNumber\": \"<string>\"\n  },\n  \"appInfo\": {\n    \"appSdkVersion\": \"<string>\"\n  },\n  \"userAgent\": \"<string>\",\n  \"meta\": \"<object>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/v1/auth-management/process/initiate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"v1",
														"auth-management",
														"process",
														"initiate"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Validate authentication process",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response time is less than 1800ms\", function () {",
													"  pm.expect(pm.response.responseTime).to.be.below(1800);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.customerId).to.exist;",
													"  pm.expect(responseData.accessToken).to.exist;",
													"  pm.expect(responseData.refreshToken).to.exist;",
													"  pm.expect(responseData.isNewCustomerCreated).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"CustomerId, accessToken, and refreshToken are non-empty strings\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.customerId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
													"    pm.expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
													"    pm.expect(responseData.refreshToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
													"});",
													"",
													"",
													"pm.test(\"Verify that isNewCustomerCreated field is a boolean value\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.isNewCustomerCreated).to.be.a('boolean');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-client-id",
												"value": "7248a069-71f5-4e36-a1a3-95db6be24656",
												"type": "text"
											},
											{
												"key": "x-session-id",
												"value": "sessionId",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "correlationId",
												"type": "text"
											},
											{
												"key": "x-customer-id",
												"value": "customerId",
												"type": "text"
											},
											{
												"key": "x-customer-ip",
												"value": "customerIp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authTransactionId\": \"{{authTransactionId}}\",\n  \"securityValueHash\": \"{{securityValueHash}}\",\n  \"authMedium\": \"PHONE_SMS_OTP\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/v1/auth-management/process/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"v1",
												"auth-management",
												"process",
												"validate"
											]
										}
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authTransactionId\": \"<string>\",\n  \"securityValueHash\": \"<string>\",\n  \"authMedium\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/v1/auth-management/process/validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"v1",
														"auth-management",
														"process",
														"validate"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"customerId\": \"<string>\",\n  \"accessToken\": \"<string>\",\n  \"refreshToken\": \"<string>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authTransactionId\": \"<string>\",\n  \"securityValueHash\": \"<string>\",\n  \"authMedium\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/v1/auth-management/process/validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"v1",
														"auth-management",
														"process",
														"validate"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Register authentication medium",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// Set the value of authMediumKey to an environment variable",
													"pm.test(\"Set the value of authMediumKey to the environment variable\", function () {",
													"    var responseJson = pm.response.json();",
													"    pm.environment.set(\"authMediumKey\", responseJson.authMediumKey);",
													"});",
													"",
													"pm.test(\"Response status code is 200\", function () {",
													"  pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response time is less than 1800ms\", function () {",
													"  pm.expect(pm.response.responseTime).to.be.below(1800);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields - authMediumKey and expiresAt\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.authMediumKey).to.exist;",
													"    pm.expect(responseData.expiresAt).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"AuthMediumKey is not an empty string\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData.authMediumKey).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "x-client-id",
												"value": "dfsdf",
												"type": "text"
											},
											{
												"key": "x-customer-id",
												"value": "sdfdsf",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerId\": \"{{customerId}}\",\n  \"authMedium\": \"BIOMETRIC\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/v1/auth-management/medium/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"v1",
												"auth-management",
												"medium",
												"register"
											]
										}
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"customerId\": \"<string>\",\n  \"authMedium\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/v1/auth-management/medium/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"v1",
														"auth-management",
														"medium",
														"register"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authMediumKey\": \"<string>\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"customerId\": \"<string>\",\n  \"authMedium\": \"<string>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/v1/auth-management/medium/register",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"v1",
														"auth-management",
														"medium",
														"register"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Initiate and validate authentication process",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Response status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Response time is less than 1800ms\", function () {",
													"  pm.expect(pm.response.responseTime).to.be.below(1800);",
													"});",
													"",
													"",
													"pm.test(\"Response has the required fields\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.accessToken).to.exist;",
													"    pm.expect(responseData.refreshToken).to.exist;",
													"    pm.expect(responseData.customerId).to.exist;",
													"    pm.expect(responseData.customerDeviceId).to.exist;",
													"    pm.expect(responseData.isNewCustomer).to.exist;",
													"});",
													"",
													"",
													"pm.test(\"AccessToken, refreshToken, customerId, and customerDeviceId are non-empty strings\", function () {",
													"  const responseData = pm.response.json();",
													"  ",
													"  pm.expect(responseData).to.be.an('object');",
													"  pm.expect(responseData.accessToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
													"  pm.expect(responseData.refreshToken).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
													"  pm.expect(responseData.customerId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
													"  pm.expect(responseData.customerDeviceId).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
													"});",
													"",
													"",
													"pm.test(\"IsNewCustomer is a boolean value\", function () {",
													"    const responseData = pm.response.json();",
													"    ",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.isNewCustomer).to.be.a('boolean');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "x-client-id",
												"value": "7248a069-71f5-4e36-a1a3-95db6be24656",
												"type": "text"
											},
											{
												"key": "x-session-id",
												"value": "sessionId",
												"type": "text"
											},
											{
												"key": "x-correlation-id",
												"value": "correlationId",
												"type": "text",
												"disabled": true
											},
											{
												"key": "x-customer-id",
												"value": "customerId",
												"type": "text",
												"disabled": true
											},
											{
												"key": "x-customer-ip",
												"value": "customerIp",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceInfo\": {\n      \"deviceOs\": \"IOS\",\n      \"deviceBrand\": \"Apple\",\n      \"deviceModel\": \"iPhone 14\",\n      \"deviceOsVersion\":\"hello\"\n    },\n  \"authMedium\": \"PHONE_SMS_OTP\",\n  \"authSource\": \"BELONGAPP\",\n  \"appInfo\": {\n    \"appSdkVersion\": \"<string>\"\n  },\n  \"userAgent\": \"<string>\",\n  \"securityValue\": \"{{authMediumKey}}\",\n  \"meta\": {\n\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/v1/auth-management/process/initiate-validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"v1",
												"auth-management",
												"process",
												"initiate-validate"
											]
										}
									},
									"response": [
										{
											"name": "Successful Response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceInfo\": {\n    \"deviceOs\": \"<string>\",\n    \"deviceBrand\": \"<string>\",\n    \"deviceModel\": \"<string>\",\n    \"deviceOsVersion\": \"<string>\"\n  },\n  \"authMedium\": \"<string>\",\n  \"authSource\": \"<string>\",\n  \"appInfo\": {\n    \"appSdkVersion\": \"<string>\"\n  },\n  \"userAgent\": \"<string>\",\n  \"securityValue\": \"<string>\",\n  \"meta\": \"<object>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/v1/auth-management/process/initiate-validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"v1",
														"auth-management",
														"process",
														"initiate-validate"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"accessToken\": \"<string>\",\n  \"refreshToken\": \"<string>\",\n  \"customerId\": \"<string>\",\n  \"customerDeviceId\": \"<string>\",\n  \"isNewCustomer\": false\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceInfo\": {\n    \"deviceOs\": \"<string>\",\n    \"deviceBrand\": \"<string>\",\n    \"deviceModel\": \"<string>\",\n    \"deviceOsVersion\": \"<string>\"\n  },\n  \"authMedium\": \"<string>\",\n  \"authSource\": \"<string>\",\n  \"appInfo\": {\n    \"appSdkVersion\": \"<string>\"\n  },\n  \"userAgent\": \"<string>\",\n  \"securityValue\": \"<string>\",\n  \"meta\": \"<object>\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/auth/v1/auth-management/process/initiate-validate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"auth",
														"v1",
														"auth-management",
														"process",
														"initiate-validate"
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Fetch Auth Customer_details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Response has the required fields\", function () {",
											"    const responseData = pm.response.json();",
											"    ",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.customerId).to.exist;",
											"    pm.expect(responseData.state).to.exist;",
											"    pm.expect(responseData.clientId).to.exist;",
											"    pm.expect(responseData.phone).to.exist;",
											"    pm.expect(responseData.phoneAnchor).to.exist;",
											"    pm.expect(responseData.customerIp).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"Phone country code is in a valid format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData).to.be.an('object');",
											"  pm.expect(responseData.phone).to.exist.and.to.be.an('object');",
											"  pm.expect(responseData.phone.countryCode).to.match(/^\\+\\d+$/);",
											"});",
											"",
											"",
											"pm.test(\"Phone number is in a valid format\", function () {",
											"  const responseData = pm.response.json();",
											"  ",
											"  pm.expect(responseData.phone.phoneNumber).to.match(/^\\d{10}$/);",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than 1800ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(1800);",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "accept",
										"value": "application/json"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-customer-id",
										"value": "8b6988a138374252b3ff67efeb10f00cs",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n   \"customerId\":\"{{customerId}}\"\n\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/v1/auth-management/customer-details/CUSTOMER_ID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"v1",
										"auth-management",
										"customer-details",
										"CUSTOMER_ID"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register authentication medium",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Response status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											"",
											"pm.test(\"Response time is less than 1800ms\", function () {",
											"  pm.expect(pm.response.responseTime).to.be.below(1800);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/jsonx-client-id:7248a069-71f5-4e36-a1a3-95db6be24656",
										"type": "text"
									},
									{
										"key": "x-session-id",
										"value": "sessionId",
										"type": "text"
									},
									{
										"key": "x-correlation-id",
										"value": "correlationId",
										"type": "text"
									},
									{
										"key": "x-customer-id",
										"value": "customerId",
										"type": "text"
									},
									{
										"key": "x-customer-ip",
										"value": "customerIp",
										"type": "text"
									},
									{
										"key": "x-client-id",
										"value": "sf",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jti\": \"<string>\",\n  \"customerId\": \"{{customerId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/v1/auth-management/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"v1",
										"auth-management",
										"logout"
									]
								}
							},
							"response": [
								{
									"name": "Successful Response",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jti\": \"<string>\",\n  \"customerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/v1/auth-management/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"v1",
												"auth-management",
												"logout"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Validation Error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jti\": \"<string>\",\n  \"customerId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/v1/auth-management/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"v1",
												"auth-management",
												"logout"
											]
										}
									},
									"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
									"code": 422,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"detail\": [\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"loc\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"msg\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/v1/meta/health",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"v1",
								"meta",
								"health"
							]
						}
					},
					"response": [
						{
							"name": "Successful Response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/auth/v1/meta/health",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"v1",
										"meta",
										"health"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api-core.old-monk.com",
			"type": "string"
		},
		{
			"key": "localUrl",
			"value": "",
			"type": "default"
		}
	]
}